//=====================================================================
//文件名称：spi.h
//功能概要：spi底层驱动构件源文件
//制作单位：苏州大学嵌入式系统与物联网研究所(sumcu.suda.edu.cn)
//版    本：  2021-11-3  V1.0
//适用芯片：CH32v103、CH32V307
//=====================================================================
#ifndef _SPI_H             //防止重复定义（ 开头)
#define _SPI_H

#include "string.h"

#define SPI_1  0    //PTA4,PTA5,PTA6,PTA7=SPI的(NSS,SCK,MISO,MOSI)
#define SPI_2  1    //PTB12,PTB13,PTB14,PTB15=SPI的(NSS,SCK,MISO,MOSI)
#define SPI_3  2    //PTA15,PTB3,PTB4,PTB5=SPI的(NSS,SCK,MISO,MOSI)

#define SPI_MASTER  1
#define SPI_SLAVE  0

#define CTLR1_CLEAR_Mask       ((uint16_t)0x3040)
#define SPI_Mode_Master        ((uint16_t)0x0104)
/* SPI or I2S mode selection masks */
#define SPI_Mode_Select        ((uint16_t)0xF7FF)
#define I2S_Mode_Select        ((uint16_t)0x0800)
/* SPI SSOE mask */
#define CTLR2_SSOE_Set         ((uint16_t)0x0004)
#define CTLR2_SSOE_Reset       ((uint16_t)0xFFFB)

//=====================================================================
//函数名称：spi_init。
//功能说明：SPI初始化
//函数参数：No：模块号，可用参数可参见gec.h文件
//       MSTR：SPI主从机选择，0选择为从机,1选择为主机。
//       BaudRate：波特率，可取9000000、4500000、2250000、1125000、
//                  562500、281250，140625单位：bps
//       CPOL：CPOL=0：高有效SPI时钟（低无效）；CPOL=1：低有效SPI时钟（高无效）
//       CPHA：CPHA=0相位为0； CPHA=1相位为1；
//函数返回：无
//函数备注： CPHA=0，时钟信号的第一个边沿出现在8周期数据传输的第一个周期的中央；
//        CPHA=1，时钟信号的第一个边沿出现在8周期数据传输的第一个周期的起点。
//        CPHA=0时，通信最稳定，即接收方在1/2周期的时刻从线上取数。
//=====================================================================
void spi_init(uint8_t No,uint8_t MSTR,uint32_t BaudRate,uint8_t CPOL,uint8_t CPHA);

//=====================================================================
//函数名称：spi_send1.
//功能说明：SPI发送一字节数据。
//函数参数：No：模块号，可用参数可参见gec.h文件
//       data：     需要发送的一字节数据。
//函数返回：0：发送失败；1：发送成功。
//=====================================================================
uint8_t spi_send1(uint8_t No,uint8_t data);

//=====================================================================
//函数名称：spi_sendN
//功能说明：SPI发送数据。
//函数参数：No：模块号，可用参数可参见gec.h文件
//       n:     要发送的字节个数。范围为(1~255)
//       data[]:所发数组的首地址。
//函数返回：无。
//=====================================================================
uint8_t spi_sendN(uint8_t No,uint8_t n,uint8_t data[]);

//=====================================================================
//函数名称：spi_receive1.
//功能说明：SPI接收一个字节的数据
//函数参数：No：模块号，可用参数可参见gec.h文件
//函数返回：接收到的数据。
//=====================================================================
uint8_t spi_receive1(uint8_t No);

//=====================================================================
//函数名称：spi_receiveN.
//功能说明：SPI接收数据。当n=1时，就是接受一个字节的数据……
//函数参数：No：模块号，可用参数可参见gec.h文件
//        n:    要发送的字节个数。范围为(1~255),
//       data[]:接收到的数据存放的首地址。
//函数返回：1：接收成功,其他情况：失败。
//=====================================================================
uint8_t spi_receiveN(uint8_t No,uint8_t n,uint8_t data[]);

//=====================================================================
//函数名称：spi_enable_re_int
//功能说明：打开SPI接收中断。
//函数参数：No：模块号，可用参数可参见gec.h文件
//函数返回：无。
//=====================================================================
void spi_enable_re_int(uint8_t No);

//=====================================================================
//函数名称：spi_disable_re_int
//功能说明：关闭SPI接收中断。
//函数参数：No：模块号，可用参数可参见gec.h文件
//函数返回：无。
//=====================================================================
void spi_disable_re_int(uint8_t No);

#endif   //防止重复定义（ 结尾)

//=====================================================================
//声明：
//（1）我们开发的源代码，在本中心提供的硬件系统测试通过，真诚奉献给社会，不足之处，
//     欢迎指正。
//（2）对于使用非本中心硬件系统的用户，移植代码时，请仔细根据自己的硬件匹配。
//
//苏州大学NXP嵌入式中心(http://sumcu.suda.edu.cn,0512-65214835)
